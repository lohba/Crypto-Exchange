[{"/Users/lohba/exchange/src/index.js":"1","/Users/lohba/exchange/src/App.js":"2","/Users/lohba/exchange/src/reportWebVitals.js":"3","/Users/lohba/exchange/src/components/Coin/Coin.js":"4","/Users/lohba/exchange/src/components/AccountBalance/AccountBalance.js":"5","/Users/lohba/exchange/src/components/CoinList/CoinList.js":"6","/Users/lohba/exchange/src/components/ExchangeHeader/ExchangeHeader.js":"7"},{"size":500,"mtime":1609380237385,"results":"8","hashOfConfig":"9"},{"size":3218,"mtime":1610344344985,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1609380237385,"results":"11","hashOfConfig":"9"},{"size":1743,"mtime":1610342843813,"results":"12","hashOfConfig":"9"},{"size":1482,"mtime":1610335261513,"results":"13","hashOfConfig":"9"},{"size":936,"mtime":1610342675470,"results":"14","hashOfConfig":"9"},{"size":862,"mtime":1611157206211,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"tf8qwl",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/lohba/exchange/src/index.js",[],["32","33"],"/Users/lohba/exchange/src/App.js",["34"],"import React, {useState, useEffect} from 'react';\nimport CoinList from './components/CoinList/CoinList';\nimport AccountBalance from './components/AccountBalance/AccountBalance';\nimport ExchangeHeader from './components/ExchangeHeader/ExchangeHeader';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootswatch/dist/flatly/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/js/all';\n\nconst Div = styled.div`\n  text-align: center;\n  background-color: rgb(0, 100, 139);\n  color:#cccccc;\n`;\n\nconst COIN_COUNT = 10;\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\n\nfunction App(props){\n  const [balance, setBalance] = useState(10000);\n  const [showBalance, setShowBalance] = useState(false);\n  const [coinData, setCoinData] = useState([]);\n\n  const componentDidMount =  async () => {\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins');\n    const coinIds = response.data.slice(0,COIN_COUNT).map(coin => coin.id);\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\n    const coinData = await Promise.all(promises);\n    const coinPriceData = coinData.map(function(response){\n      const coin = response.data;\n      return {\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        price:formatPrice(Number(coin.quotes.USD.price)),\n      }\n    });\n    setCoinData(coinPriceData);\n    }\n\n  useEffect(function(){\n    if(coinData.length === 0){\n      componentDidMount();\n    } \n  });\n\n  const handleBrrrr = () => {\n    setBalance(oldBalance => oldBalance + 1200);\n  }\n\n  const handleBalanceVisibilityChange = () => {\n    setShowBalance(oldValue => !oldValue)\n  }\n\n  const handleTransaction = (isBuy, valueChangeId) => {\n    var balanceChange = isBuy ? 1 : -1;\n    const newCoinData = coinData.map(function(values){\n      let newValues = {...values};\n      if(valueChangeId == values.key) {\n        newValues.balance += balanceChange;\n        setBalance(oldBalance => oldBalance - balanceChange * newValues.price);\n      }\n      return newValues;\n    })\n    setCoinData(newCoinData);\n  }\n  const handleRefresh = async (valueChangeId) => {\n    const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\n    const response = await axios.get(tickerUrl);\n    const newPrice = formatPrice(response.data.quotes.USD.price)\n    const newCoinData = coinData.map(function (values) {\n      let newValues = {...values};\n      if(valueChangeId === values.key){\n        newValues.price = newPrice;\n      }\n      return newValues;\n    });\n    setCoinData(newCoinData);\n  }\n\n  return (\n    <Div className=\"App\">\n      <ExchangeHeader/>\n      <AccountBalance \n        amount={balance} \n        showBalance={showBalance} \n        handleBrrrr={handleBrrrr}\n        handleBalanceVisibilityChange={handleBalanceVisibilityChange}/>\n      <CoinList \n        coinData={coinData} \n        showBalance={showBalance}\n        newCoinData={handleTransaction}\n        handleTransaction={handleTransaction}\n        handleRefresh={handleRefresh}/>\n    </Div>\n  );\n}\n\nexport default App;\n","/Users/lohba/exchange/src/reportWebVitals.js",[],"/Users/lohba/exchange/src/components/Coin/Coin.js",[],"/Users/lohba/exchange/src/components/AccountBalance/AccountBalance.js",[],"/Users/lohba/exchange/src/components/CoinList/CoinList.js",[],"/Users/lohba/exchange/src/components/ExchangeHeader/ExchangeHeader.js",["35","36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":63,"column":24,"nodeType":"43","messageId":"44","endLine":63,"endColumn":26},{"ruleId":"45","severity":1,"message":"46","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":12},{"ruleId":"45","severity":1,"message":"49","line":5,"column":7,"nodeType":"47","messageId":"48","endLine":5,"endColumn":10},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Img' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]