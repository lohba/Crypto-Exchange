{"version":3,"sources":["components/Coin/Coin.js","components/CoinList/CoinList.js","components/AccountBalance/AccountBalance.js","components/ExchangeHeader/logo.svg","components/ExchangeHeader/ExchangeHeader.js","App.js","reportWebVitals.js","index.js"],"names":["Td","styled","td","TdControls","TdName","Button","button","Coin","props","name","ticker","price","showBalance","balance","action","method","className","onClick","event","preventDefault","handleRefresh","tickerId","handleTransaction","Table","table","CoinList","coinData","map","key","Section","section","Balance","div","BalanceToggleButton","formatter","Intl","NumberFormat","style","currency","AccountBalance","buttonText","content","format","amount","buttonClass","handleBalanceVisibilityChange","handleBrrrr","img","Header","header","H1","h1","HeaderExchange","Component","Div","formatPrice","parseFloat","Number","toFixed","App","useState","setBalance","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","length","isBuy","valueChangeId","balanceChange","newCoinData","values","newValues","oldBalance","tickerUrl","newPrice","oldValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c5036e9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Td = styled.td`\n  border: 1px solid #cccccc; \n  width:16vw;\n`;\n\nconst TdControls = styled(Td) `\n  width: 36vw;\n`;\n\nconst TdName = styled(Td) `\n  width: 24vw;\n`\n\nconst Button = styled.button `\n  font-size: 11px;\n  width: 64px;\n  margin: 3px 5px 0;\n`\n\nexport default function Coin(props) {\n    const handleRefresh = (event) => {\n      //Prevent the default action of submitting the form\n      event.preventDefault();\n      props.handleRefresh(props.tickerId);\n    }\n\n    const handleBuy = (event) => {\n      //Prevent the default action of submitting the form\n      event.preventDefault();\n      props.handleTransaction(true, props.tickerId);\n    }\n\n    const handleSell = (event) => {\n      //Prevent the default action of submitting the form\n      event.preventDefault();\n      props.handleTransaction(false, props.tickerId);\n    }\n\n    return (\n        <tr >\n          <TdName>{props.name}</TdName>\n          <Td>{props.ticker}</Td>\n          <Td>${props.price}</Td>\n          <Td>{props.showBalance ? props.balance: '-'}</Td> \n          <TdControls>\n          <form action=\"#\" method=\"POST\">\n            <Button className='btn btn-info' onClick={handleRefresh}>\n                Refresh\n            </Button>\n            <Button className='btn btn-warning' onClick={handleBuy}>\n                Buy\n            </Button>\n            <Button className='btn btn-danger' onClick={handleSell}>\n                Sell\n            </Button>\n          </form>\n          </TdControls>\n        </tr>\n      )\n}\n\nCoin.propTypes = {\n  name: PropTypes.string.isRequired,\n  ticker: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired\n}","import React from 'react';\nimport Coin from '../Coin/Coin';\nimport styled from 'styled-components';\n\nconst Table = styled.table`    \n    font-size: 1rem;\n`;\n\nexport default function CoinList(props) {\nreturn (\n    <Table className='table table-primary table-bordered'>\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Ticker</th>\n        <th>Price</th>\n        <th>Balance</th>\n        <th>Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      {\n        props.coinData.map(({key, name, ticker, price, balance}) => \n          <Coin key={key} \n                handleRefresh={props.handleRefresh} \n                handleTransaction={props.handleTransaction}\n                name={name} \n                ticker={ticker}\n                showBalance={props.showBalance}\n                balance={balance} \n                price={price}\n                tickerId={key}\n                />\n          )\n      }\n    </tbody>\n  </Table>\n)\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Section = styled.section`   \n    font-size:2rem;\n    text-align: center;\n    margin-bottom: 2rem;\n    line-height: 3rem;\n`;\n\nconst Balance = styled.div `\n    min-width: 250ps;\n    margin: 0.5rem 0 0 2.5rem;\n    font-size:1.5em;\n    vertical-align: middle;\n    ${'' /* text-align: left; */}\n`;\n\nconst Button = styled.button`\n    margin: 0 8px;\n`;\nconst BalanceToggleButton = styled(Button) `\n    width: 150px;\n`;\n\nvar formatter = Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n});\n\nexport default function AccountBalance(props){\n    const buttonText = props.showBalance ? 'Hide Balance' : 'Show Balance';\n    let content = '\\u00A0';\n    if (props.showBalance){\n        content = <>{formatter.format(props.amount)}</>\n    }\n    const buttonClass = 'btn ' + (props.showBalance ? 'btn-warning' : 'btn-info');\n\n    return (\n        <>\n        <Balance>{content}</Balance>\n        <Section>\n            <BalanceToggleButton onClick={props.handleBalanceVisibilityChange}\n            className={buttonClass}>\n                {buttonText}\n            </BalanceToggleButton>\n            <Button className=\"btn btn-success\"\n                onClick={props.handleBrrrr}>\n                <i className=\"fas fa-helicopter\"></i>\n            </Button>\n        </Section>\n        </>\n    );\n}\n\nAccountBalance.propTypes = {\n    amount: PropTypes.number.isRequired\n  }","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport styled from 'styled-components';\n\nconst Img = styled.img`\n    height: 8rem;\n    pointer-events: none;\n`;\nconst Header = styled.header`\n    background-color: #282c34;\n    min-height: 10vh;\n    width:100%;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-start;\n    font-size: 36px;\n    color: white;\n`;\nconst H1 = styled.h1 `\n    font-size: 3rem;\n    line-height: 8rem;\n    fold-weigt: bold;\n    min-width: 300px;\n    margin-left: 60px;\n`;\n\nexport default class HeaderExchange extends Component {\n    render() {\n        return (\n            <Header>\n            {/* <Img src={logo} alt=\"React logo\" /> */}\n              <H1 className=\"App-title\">\n                Coin Exchange\n              </H1>\n            </Header>\n        )\n    }\n}\n","import React, {useState, useEffect} from 'react';\nimport CoinList from './components/CoinList/CoinList';\nimport AccountBalance from './components/AccountBalance/AccountBalance';\nimport ExchangeHeader from './components/ExchangeHeader/ExchangeHeader';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootswatch/dist/flatly/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/js/all';\n\nconst Div = styled.div`\n  text-align: center;\n  background-color: rgb(0, 100, 139);\n  color:#cccccc;\n`;\n\nconst COIN_COUNT = 10;\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\n\nfunction App(props){\n  const [balance, setBalance] = useState(10000);\n  const [showBalance, setShowBalance] = useState(false);\n  const [coinData, setCoinData] = useState([]);\n\n  const componentDidMount =  async () => {\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins');\n    const coinIds = response.data.slice(0,COIN_COUNT).map(coin => coin.id);\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\n    const coinData = await Promise.all(promises);\n    const coinPriceData = coinData.map(function(response){\n      const coin = response.data;\n      return {\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        price:formatPrice(Number(coin.quotes.USD.price)),\n      }\n    });\n    setCoinData(coinPriceData);\n    }\n\n  useEffect(function(){\n    if(coinData.length === 0){\n      componentDidMount();\n    } \n  });\n\n  const handleBrrrr = () => {\n    setBalance(oldBalance => oldBalance + 1200);\n  }\n\n  const handleBalanceVisibilityChange = () => {\n    setShowBalance(oldValue => !oldValue)\n  }\n\n  const handleTransaction = (isBuy, valueChangeId) => {\n    var balanceChange = isBuy ? 1 : -1;\n    const newCoinData = coinData.map(function(values){\n      let newValues = {...values};\n      if(valueChangeId == values.key) {\n        newValues.balance += balanceChange;\n        setBalance(oldBalance => oldBalance - balanceChange * newValues.price);\n      }\n      return newValues;\n    })\n    setCoinData(newCoinData);\n  }\n  const handleRefresh = async (valueChangeId) => {\n    const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\n    const response = await axios.get(tickerUrl);\n    const newPrice = formatPrice(response.data.quotes.USD.price)\n    const newCoinData = coinData.map(function (values) {\n      let newValues = {...values};\n      if(valueChangeId === values.key){\n        newValues.price = newPrice;\n      }\n      return newValues;\n    });\n    setCoinData(newCoinData);\n  }\n\n  return (\n    <Div className=\"App\">\n      <ExchangeHeader/>\n      <AccountBalance \n        amount={balance} \n        showBalance={showBalance} \n        handleBrrrr={handleBrrrr}\n        handleBalanceVisibilityChange={handleBalanceVisibilityChange}/>\n      <CoinList \n        coinData={coinData} \n        showBalance={showBalance}\n        newCoinData={handleTransaction}\n        handleTransaction={handleTransaction}\n        handleRefresh={handleRefresh}/>\n    </Div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}